name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'

    - name: Build with Maven
      run: mvn clean package

    - name: Copiando JAR gerado para a pasta jar-upload
      run: mkdir -p jar-upload && cp ./target/*.jar ./jar-upload

    - name: Definir nome do arquivo JAR sem extensão
      id: jar_name
      run: echo "::set-output name=jar_name::$(basename $(ls ./jar-upload/*.jar) .jar)"

    - name: Usar o nome do JAR em outra etapa
      run: echo "O nome do arquivo JAR é ${{ steps.jar_name.outputs.jar_name }}"

    - name: Enviando os JAR por FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.HOST }}
        username: ${{ secrets.USUARIOCPANEL }}
        password: ${{ secrets.SENHACPANEL }}
        local-dir: ./jar-upload/
        server-dir: ~/appservers/standalone/

    - name: Instalar o SSH Client
      run: sudo apt-get install openssh-client sshpass expect

    - name: Parar o Spring Boot
      env:
        USUARIOCPANEL: ${{ secrets.USUARIOCPANEL }}
        HOST: ${{ secrets.HOST }}
        SENHACPANEL: ${{ secrets.SENHACPANEL }}
      run: |
        sshpass -p $SENHACPANEL ssh -o StrictHostKeyChecking=no $USUARIOCPANEL@$HOST 'pkill -f "java -jar"'